apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app: mongodb
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
        component: database
    spec:
      containers:
      - name: mongodb
        image: mongo:7.0
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        - name: MONGO_INITDB_ROOT_DATABASE
          value: "unity"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /etc/mongo
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: mongodb-exporter
        image: percona/mongodb_exporter:0.39
        ports:
        - containerPort: 9216
          name: metrics
        env:
        - name: MONGODB_URI
          value: "mongodb://$(MONGO_INITDB_ROOT_USERNAME):$(MONGO_INITDB_ROOT_PASSWORD)@localhost:27017/$(MONGO_INITDB_ROOT_DATABASE)?authSource=admin"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9216
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9216
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
      - name: mongodb-config
        configMap:
          name: mongodb-config
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app: mongodb
    component: database
    service: mongodb-internal
  annotations:
    description: "Internal MongoDB service for cluster communication"
    prometheus.io/scrape: "true"
    prometheus.io/port: "27017"
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongodb
  selector:
    app: mongodb
---
# External MongoDB service for development/testing (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: mongodb-external
  labels:
    app: mongodb
    component: database
    service: mongodb-external
  annotations:
    description: "External MongoDB service for development access"
    prometheus.io/scrape: "true"
    prometheus.io/port: "27017"
spec:
  type: NodePort
  ports:
  - port: 27017
    targetPort: 27017
    nodePort: 30017
    protocol: TCP
    name: mongodb
  selector:
    app: mongodb
---
# MongoDB metrics service for monitoring
apiVersion: v1
kind: Service
metadata:
  name: mongodb-metrics
  labels:
    app: mongodb
    component: database
    service: mongodb-metrics
  annotations:
    description: "MongoDB metrics service for monitoring"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9216"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9216
    targetPort: 9216
    protocol: TCP
    name: metrics
  selector:
    app: mongodb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  labels:
    app: mongodb
    component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: "" # Uses default storage class
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  labels:
    app: mongodb
    component: database
data:
  mongod.conf: |
    storage:
      dbPath: /data/db
    systemLog:
      destination: file
      logAppend: true
      path: /var/log/mongodb/mongod.log
    net:
      port: 27017
      bindIp: 0.0.0.0
    security:
      authorization: enabled
# Secrets are now managed in kubernetes-secrets.enc.yaml
# This file is encrypted with SOPS and decrypted during deployment
